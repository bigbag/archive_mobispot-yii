!function(e,t,o){"use strict";t.module("ngCookies",["ng"]).factory("$cookies",["$rootScope","$browser",function(e,n){var r,s={},i={},a=!1,c=t.copy,u=t.isUndefined;return n.addPollFn(function(){var t=n.cookies();r!=t&&(r=t,c(t,i),c(t,s),a&&e.$apply())})(),a=!0,e.$watch(function(){var e,r,a;for(e in i)u(s[e])&&n.cookies(e,o);for(e in s)r=s[e],t.isString(r)||(r=""+r,s[e]=r),r!==i[e]&&(n.cookies(e,r),a=!0);if(a)for(e in r=n.cookies(),s)s[e]!==r[e]&&(u(r[e])?delete s[e]:s[e]=r[e])}),s}]).factory("$cookieStore",["$cookies",function(e){return{get:function(o){return(o=e[o])?t.fromJson(o):o},put:function(o,n){e[o]=t.toJson(n)},remove:function(t){delete e[t]}}}])}(window,window.angular),angular.module("ui.sortable",[]).value("uiSortableConfig",{}).directive("uiSortable",["uiSortableConfig",function(e){return{require:"?ngModel",link:function(t,o,n,r){function s(e,t){return t&&"function"==typeof t?function(o,n){e(o,n),t(o,n)}:e}var i={},a={receive:null,remove:null,start:null,stop:null,update:null};angular.extend(i,e),r&&(r.$render=function(){o.sortable(i)},a.start=function(e,t){t.item.sortable={index:t.item.index()}},a.update=function(e,t){t.item.sortable.resort=r},a.receive=function(e,t){t.item.sortable.relocate=!0,r.$modelValue.splice(t.item.index(),0,t.item.sortable.moved)},a.remove=function(e,t){t.item.sortable.moved=1===r.$modelValue.length?r.$modelValue.splice(0,1)[0]:r.$modelValue.splice(t.item.sortable.index,1)[0]},a.stop=function(e,o){if(o.item.sortable.resort&&!o.item.sortable.relocate){var n,r;r=o.item.sortable.index,n=o.item.index(),o.item.sortable.resort.$modelValue.splice(n,0,o.item.sortable.resort.$modelValue.splice(r,1)[0])}(o.item.sortable.resort||o.item.sortable.relocate)&&t.$apply()}),t.$watch(n.uiSortable,function(e){angular.forEach(e,function(e,t){a[t]&&(e=s(a[t],e)),o.sortable("option",t,e)})},!0),angular.forEach(a,function(e,t){i[t]=s(e,i[t])}),o.sortable(i)}}}]),angular.module("ui.mask",[]).value("uiMaskConfig",{maskDefinitions:{9:/\d/,A:/[a-zA-Z]/,"*":/[a-zA-Z0-9]/},clearOnBlur:!0}).directive("uiMask",["uiMaskConfig","$parse",function(e,t){"use strict";return{priority:100,require:"ngModel",restrict:"A",compile:function(){var o=e;return function(e,n,r,s){function i(e){return angular.isDefined(e)?(b(e),V?(l(),p(),!0):d()):d()}function a(e){angular.isDefined(e)&&(I=e,V&&C())}function c(e){return V?(O=g(e||""),E=f(O),s.$setValidity("mask",E),E&&O.length?h(O):void 0):e}function u(e){return V?(O=g(e||""),E=f(O),s.$viewValue=O.length?h(O):"",s.$setValidity("mask",E),""===O&&r.required&&s.$setValidity("required",!s.$error.required),E?O:void 0):e}function d(){return V=!1,m(),angular.isDefined(U)?n.attr("placeholder",U):n.removeAttr("placeholder"),angular.isDefined(A)?n.attr("maxlength",A):n.removeAttr("maxlength"),n.val(s.$modelValue),s.$viewValue=s.$modelValue,!1}function l(){O=z=g(s.$viewValue||""),F=R=h(O),E=f(O);var e=E&&O.length?F:"";r.maxlength&&n.attr("maxlength",2*M[M.length-1]),n.attr("placeholder",I),n.val(e),s.$viewValue=e}function p(){N||(n.bind("blur",k),n.bind("mousedown mouseup",_),n.bind("input keyup click focus",C),N=!0)}function m(){N&&(n.unbind("blur",k),n.unbind("mousedown",_),n.unbind("mouseup",_),n.unbind("input",C),n.unbind("keyup",C),n.unbind("click",C),n.unbind("focus",C),N=!1)}function f(e){return e.length?e.length>=D:!0}function g(e){var t="",o=P.slice();return e=e.toString(),angular.forEach(q,function(t){e=e.replace(t,"")}),angular.forEach(e.split(""),function(e){o.length&&o[0].test(e)&&(t+=e,o.shift())}),t}function h(e){var t="",o=M.slice();return angular.forEach(I.split(""),function(n,r){e.length&&r===o[0]?(t+=e.charAt(0)||"_",e=e.substr(1),o.shift()):t+=n}),t}function v(e){var t=r.placeholder;return"undefined"!=typeof t&&t[e]?t[e]:"_"}function y(){return I.replace(/[_]+/g,"_").replace(/([^_]+)([a-zA-Z0-9])([^_])/g,"$1$2_$3").split("_")}function b(e){var t=0;if(M=[],P=[],I="","string"==typeof e){D=0;var o=!1,n=e.split("");angular.forEach(n,function(e,n){H.maskDefinitions[e]?(M.push(t),I+=v(n),P.push(H.maskDefinitions[e]),t++,o||D++):"?"===e?o=!0:(I+=e,t++)})}M.push(M.slice().pop()+1),q=y(),V=M.length>1?!0:!1}function k(){H.clearOnBlur&&(L=0,B=0,E&&0!==O.length||(F="",n.val(""),e.$apply(function(){s.$setViewValue("")})))}function _(e){"mousedown"===e.type?n.bind("mouseout",w):n.unbind("mouseout",w)}function w(){B=T(this),n.unbind("mouseout",w)}function C(t){t=t||{};var o=t.which,r=t.type;if(16!==o&&91!==o){var i,a=n.val(),c=R,u=g(a),d=z,l=!1,p=x(this)||0,m=L||0,f=p-m,v=M[0],y=M[u.length]||M.slice().shift(),b=B||0,k=T(this)>0,_=b>0,w=a.length>c.length||b&&a.length>c.length-b,C=a.length<c.length||b&&a.length===c.length-b,P=o>=37&&40>=o&&t.shiftKey,I=37===o,q=8===o||"keyup"!==r&&C&&-1===f,D=46===o||"keyup"!==r&&C&&0===f&&!_,O=(I||q||"click"===r)&&p>v;if(B=T(this),!P&&(!k||"click"!==r&&"keyup"!==r)){if("input"===r&&C&&!_&&u===d){for(;q&&p>v&&!S(p);)p--;for(;D&&y>p&&-1===M.indexOf(p);)p++;var F=M.indexOf(p);u=u.substring(0,F)+u.substring(F+1),l=!0}for(i=h(u),R=i,z=u,n.val(i),l&&e.$apply(function(){s.$setViewValue(u)}),w&&v>=p&&(p=v+1),O&&p--,p=p>y?y:v>p?v:p;!S(p)&&p>v&&y>p;)p+=O?-1:1;(O&&y>p||w&&!S(m))&&p++,L=p,$(this,p)}}}function S(e){return M.indexOf(e)>-1}function x(e){if(!e)return 0;if(void 0!==e.selectionStart)return e.selectionStart;if(document.selection){e.focus();var t=document.selection.createRange();return t.moveStart("character",e.value?-e.value.length:0),t.text.length}return 0}function $(e,t){if(!e)return 0;if(0!==e.offsetWidth&&0!==e.offsetHeight)if(e.setSelectionRange)e.focus(),e.setSelectionRange(t,t);else if(e.createTextRange){var o=e.createTextRange();o.collapse(!0),o.moveEnd("character",t),o.moveStart("character",t),o.select()}}function T(e){return e?void 0!==e.selectionStart?e.selectionEnd-e.selectionStart:document.selection?document.selection.createRange().text.length:0:0}var M,P,I,q,D,O,F,E,R,z,L,B,V=!1,N=!1,U=r.placeholder,A=r.maxlength,H={};r.uiOptions?(H=e.$eval("["+r.uiOptions+"]"),angular.isObject(H[0])&&(H=function(e,t){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(void 0===t[o]?t[o]=angular.copy(e[o]):angular.extend(t[o],e[o]));return t}(o,H[0]))):H=o,r.$observe("uiMask",i),r.$observe("placeholder",a);var j=!1;r.$observe("modelViewValue",function(e){"true"===e&&(j=!0)}),e.$watch(r.ngModel,function(o){if(j&&o){var n=t(r.ngModel);n.assign(e,s.$viewValue)}}),s.$formatters.push(c),s.$parsers.push(u),n.bind("mousedown mouseup",_),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){if(null===this)throw new TypeError;var t=Object(this),o=t.length>>>0;if(0===o)return-1;var n=0;if(arguments.length>1&&(n=Number(arguments[1]),n!==n?n=0:0!==n&&1/0!==n&&n!==-1/0&&(n=(n>0||-1)*Math.floor(Math.abs(n)))),n>=o)return-1;for(var r=n>=0?n:Math.max(o-Math.abs(n),0);o>r;r++)if(r in t&&t[r]===e)return r;return-1})}}}}]),angular.module("mobispot",["ngCookies","ui.sortable","ui.mask"]),angular.module("mobispot").filter("tel",function(){return function(e){if(!e)return"";var t=e.toString().trim().replace(/^\+/,""),o=t.slice(0,1),n=t.slice(1,4),r=t.slice(4);return r=r.slice(0,3)+" "+r.slice(3,5)+" "+r.slice(5),("+"+o+" ("+n+") "+r).trim()}}),angular.module("mobispot").service("contentService",function(){this.desktopModal=function(e,t){if(angular.isUndefined(t)&&(t=500),angular.element(".lang-list").fadeOut(),angular.element(".lang").removeClass("open"),"none"==e)return $(".show-block.active").removeClass("active").fadeOut(t),!1;var o=angular.element("#"+e);$(".show-block").hasClass("active")&&$(".show-block.active").attr("id")!=e?$(".show-block.active").removeClass("active").fadeOut(t,function(){o.fadeIn(t).addClass("active")}):o.fadeIn(t).addClass("active")},this.mobileModal=function(e,t){var o=angular.element(".m-result"),n=o.find("p");o.removeClass("m-negative"),"error"==t&&o.addClass("m-negative"),o.hide(),o.show(),n.text(e),setTimeout(function(){o.hide()},5e3)},this.messageModal=function(e,t){if(speed=500,"mobile"===t)this.mobileModal(e,"none");else{angular.element(".lang-list").fadeOut(),angular.element(".lang").removeClass("open");var o=angular.element("#message");o.removeClass("negative"),o.removeClass("alert");var n=angular.element("#message p");$(".show-block").hasClass("active")?$(".show-block.active").removeClass("active").fadeOut(speed,function(){n.html(e),o.fadeIn(speed).addClass("active")}):(n.html(e),o.fadeIn(speed).addClass("active"))}},this.scrollPage=function(e,t){angular.isUndefined(t)&&(t=600);var o=$(e).offset().top;$("html, body").animate({scrollTop:o},t)};var e={};this.setSpot=function(t){e=t},this.getSpot=function(){return e}}),angular.module("mobispot").service("dialogService",function(){var e=function(e,t,o,n,r){function s(){e("yes"),a()}function i(){e("no"),a()}function a(){d.unbind("click",s),l.unbind("click",i),$(document).unbind("click",i),c.removeClass("active").fadeOut(speed)}speed=500,angular.element(".lang-list").fadeOut(),angular.element(".lang").removeClass("open");var c=angular.element("#b-dialog"),u=angular.element("#b-dialog p"),d=angular.element("#b-dialog .yes-button"),l=angular.element("#b-dialog .no-button");$(".show-block").hasClass("active")&&$(".show-block.active").removeClass("active").fadeOut(0),u.html(n),d.text(t),l.text(o),c.removeClass("alert"),c.removeClass("negative"),"undefined"!=typeof r&&c.addClass(r),c.fadeIn(speed).addClass("active"),d.bind("click",s),l.bind("click",i),$(document).bind("click",i)};return{yesNoDialog:e}}),angular.module("mobispot").controller("DemokitController",["$scope","$http","$compile","$timeout","contentService",function(e,t,o,n,r){e.error={},e.$watch("order.name + order.email + order.phone + order.address + order.city + order.zip + order.country + order.shipping + order.payment",function(){e.error.field=!1}),e.order={name:"",email:"",phone:"",address:"",city:"",zip:"",country:"",shipping:1,payment:1},e.products={},e.max_product_id=0,e.prices={},e.shippings={},e.payments={},e.total=0,e.toMain=!1,e.registerProduct=function(t,o){e.products[t]=0,t>e.max_product_id&&(e.max_product_id=t),e.prices[t]=o},e.addProduct=function(t){e.products[t]<9&&e.products[t]++,e.calculateSumm()},e.deductProduct=function(t){e.products[t]>0&&e.products[t]--,e.calculateSumm()},e.registerShipping=function(t,o){e.shippings[t]=o},e.setShipping=function(t,o){e.order.shipping=t,"undefined"!=typeof o&&angular.element(o.currentTarget).click(),e.calculateSumm()},e.registerPayment=function(t,o){e.payments[t]=o},e.setPayment=function(t,o){e.order.payment=t,"undefined"!=typeof o&&angular.element(o.currentTarget).click()},e.calculateSumm=function(){e.summ=120,e.total=e.summ,e.order.shipping&&"undefined"!=typeof e.shippings[e.order.shipping]&&(e.total+=e.shippings[e.order.shipping])},e.buyDemoKit=function(n){return e.orderForm.$valid?void(e.toMain?window.location.href="/":(n.products=e.products,t.post("/service/buyDemoKit",n).success(function(t){"no"==t.error?"email"==t.action?(e.result.message=t.message,r.desktopModal("message"),e.toMain=!0,e.finishButton=e.toMainMessage):(angular.element("#demo-kit-block").after(o(t.content)(e)),angular.element("#form-ym-pay").submit()):(e.result.message=t.message,r.desktopModal("message"),e.error.field=!0)}))):(e.error.field=!0,!1)}}]),angular.module("mobispot").controller("HelpController",["$scope","$http","contentService",function(e,t,o){e.error={},e.send=function(n,r){return r?(n.email=n.help_email,void t.post("/service/sendQuestion",n).success(function(t){"no"==t.error&&(e.user.name="",e.user.help_email="",e.user.question="",e.user.phone="",e.result.message=t.content,o.viewModal("message"))})):!1}}]),angular.module("mobispot").controller("PhonesController",["$scope",function(e){e.initPhones=function(t){e.phonesList=t},e.initDevices=function(t){e.devicesList=t},e.phonesList=[],e.devicesList=[]}]),angular.module("mobispot").controller("SlideController",["$scope","$timeout",function(e,t){e.IMAGE_WIDTH=300,e.FADE_SPEED=0,e.getRandomInt=function(e,t){return Math.floor(Math.random()*(t-e+1))+e},e.spots={},e.spots.name="spots",e.spots.listposition={left:"0px"},e.spots.slides=[{id:1,img:"brace_blue.jpg"}],e.spots.wristbands=[1],e.spots.wristbands_current=e.spots.wristbands[0],e.spots.cards=[],e.spots.cards_current=-1,e.spots.keys=[],e.spots.keys_current=-1,e.spots.current=e.spots.wristbands_current,e.spots.current_type="wristband",e.spots.color_rotation=!1,e.spots.timer_rotation=!1,e.scrollTo=function(t,o){t.listposition={left:e.IMAGE_WIDTH*o*-1+"px"}},angular.element(window).bind("load",function(){e.sliderInit()}),e.sliderInit=function(){e.spots.slides=[{id:0,img:"brace_black.png"},{id:1,img:"brace_blue.png"},{id:2,img:"brace_green.png"},{id:3,img:"brace_patt01.png"},{id:4,img:"brace_patt02.png"},{id:5,img:"brace_patt03.png"},{id:6,img:"brace_patt04.png"},{id:7,img:"brace_patt05.png"},{id:8,img:"brace_patt06.png"},{id:9,img:"brace_patt07.png"},{id:10,img:"brace_red.png"},{id:11,img:"brace_white.png"},{id:12,img:"card_black.png"},{id:13,img:"card_blue.png"},{id:14,img:"card_green.png"},{id:15,img:"card_red.png"},{id:16,img:"card_white.png"},{id:17,img:"card_yellow.png"},{id:18,img:"key_black.png"},{id:19,img:"key_blue.png"},{id:20,img:"key_green.png"},{id:21,img:"key_red.png"},{id:22,img:"key_white.png"},{id:23,img:"key_yellow.png"},{id:24,img:"brace_yellow.png"}],e.spots.wristbands=[0,1,4,2,3,5,6,7,8,9,10,11,24],e.spots.wristbands_current=e.spots.wristbands[e.getRandomInt(0,e.spots.wristbands.length-1)],e.spots.cards=[12,13,14,15,16,17],e.spots.cards_current=15,e.spots.keys=[18,19,20,21,22,23],e.spots.keys_current=20,e.spots.inited=!0},e.fadeTo=function(t,o){if(t.current==o)return!1;angular.element("#slider-"+t.name+" .f-slide").stop();var n="#"+t.name+"_"+o;return angular.element(n).length?(t.current=o,angular.element("#slider-"+t.name+" .f-slide[id!="+n+"]").fadeOut(0),angular.element(n).fadeIn(e.FADE_SPEED),!0):!1},e.fadeToWistbrands=function(){e.fadeTo(e.spots,e.spots.wristbands_current)&&(e.spots.current_type="wristband")},e.fadeToCards=function(){e.fadeTo(e.spots,e.spots.cards_current)&&(e.spots.current_type="card")},e.fadeToKeys=function(){e.fadeTo(e.spots,e.spots.keys_current)&&(e.spots.current_type="key")},e.startColors=function(){return e.spots.color_rotation?!1:(e.spots.color_rotation=!0,e.spots.timer_rotation?!1:(e.spots.timer_rotation=!0,void t(function(){e.colorRotation()},100)))},e.stopColors=function(){e.spots.color_rotation=!1},e.colorRotation=function(){if(!e.spots.color_rotation)return e.spots.timer_rotation=!1,!1;if("wristband"==e.spots.current_type){for(var o=-1,n=0;n<e.spots.wristbands.length;n++)e.spots.wristbands[n]==e.spots.wristbands_current&&(o=n);if(0>o)return!1;e.spots.wristbands_current=e.spots.wristbands.length-1==o?e.spots.wristbands[0]:e.spots.wristbands[o+1],e.fadeToWistbrands()}else if("card"==e.spots.current_type){for(var o=-1,n=0;n<e.spots.cards.length;n++)e.spots.cards[n]==e.spots.cards_current&&(o=n);if(0>o)return!1;e.spots.cards_current=e.spots.cards.length-1==o?e.spots.cards[0]:e.spots.cards[o+1],e.fadeToCards()}else{if("key"!=e.spots.current_type)return!1;for(var o=-1,n=0;n<e.spots.keys.length;n++)e.spots.keys[n]==e.spots.keys_current&&(o=n);if(0>o)return!1;e.spots.keys_current=e.spots.keys.length-1==o?e.spots.keys[0]:e.spots.keys[o+1],e.fadeToKeys()}e.spots.timer_rotation=!0,t(function(){e.colorRotation()},1300)},e.randomSlide=function(t){e.fadeTo(t,e.getRandomInt(0,t.slides.length-1))}}]),angular.module("mobispot").controller("SpotController",["$scope","$http","$compile","$timeout","contentService","dialogService",function(e,t,o,n,r,s){function i(e){e.stopPropagation(),e.preventDefault(),"dragover"==e.type?angular.element("#dropbox").addClass("hover"):angular.element("#dropbox").removeClass("hover")}function a(t){i(t);for(var o,n=t.target.files||t.dataTransfer.files,r=0;o=n[r];r++)e.uploadFile(o)}function c(t){e.$apply(function(){e.progress=t.lengthComputable?Math.round(100*t.loaded/t.total):"unable to compute"})}e.maxSize=26214400,e.progress=0,e.keys=[],e.action=!1,e.error={},e.result={},e.spot={},e.spot.discodes=0,e.general={},e.general.views=!1,e.host_mobile=0,e.wallet={},e.wallet.cards={},e.scroll_key=-1,e.actions={},e.actions.page="",e.actions.phrase="",e.actions.in_progress=!1,e.actions.offset=0,e.actions.count_all=0,e.text={},e.transport_types=[],e.custom_card={},e.prev_custom_card={},e.selected_type={},e.in_request=!1,e.wallet_history={},e.wallet_history.date="",e.wallet_history.empty_date=!1,e.date_history_shown=!1,e.$watch("spot.code + spot.terms",function(){e.error.code=!1,e.error.terms=!1}),e.addSpot=function(n){return n.code?e.spot.terms?void t.post("/spot/add",n).success(function(t){"no"==t.error?(e.spot.discodes=t.discodes,angular.element(".spot-list").prepend(o(t.content)(e)),angular.element("#actSpot").click(),delete e.spot.code,delete e.spot.terms,(e.host_mobile||1==n.need_reload)&&(window.location.href="http://"+window.location.hostname+"/spot/list")):"yes"==t.error&&(e.error.code=!0)}):!1:(e.error.code=!0,!1)},e.$watch("general.views + spot.discodes",function(){e.actions.page="",angular.element(window).unbind("scroll",e.loadMoreCoupons),"spot"==e.general.views?e.viewSpot(e.spot):"wallet"==e.general.views?e.viewWallet(e.spot):"coupon"==e.general.views?e.viewCoupons(e.spot,e.actions):"settings"==e.general.views?e.viewsSettings(e.spot):"transport"==e.general.views&&e.viewTransport(e.spot)}),e.bodyMinHeight=function(){var e=angular.element(".spot-list").height();angular.element(".spot-content").css("min-height",e+200)},e.viewSpot=function(n){if(0===n.discodes)return!1;var s=angular.element("#spot-block");t.post("/spot/view",n).success(function(t){"no"==t.error&&(s.empty(),s.html(o(t.content)(e)),e.keys=[],e.content_iteration=0,e.fileUploadInit(),e.bodyMinHeight(),angular.element(".spot-content_row").show().animate({opacity:1},500),r.scrollPage(e.scroll_key&&e.scroll_key>1?"#block-"+e.scroll_key:"body"),e.scroll_key=-1)})},e.addContent=function(){e.addValue(e.spot.content)},e.addValue=function(n){e.spot.content=n,t.post("/spot/spotAddContent",e.spot).success(function(t){if("no"==t.error){angular.element("#add-content").append(o(t.content)(e)),e.spot.keys.push(t.key),e.spot.content="",angular.element("textarea").removeClass("put"),angular.element("#extraMediaForm").hasClass("open")&&(angular.element("#extraMediaForm").slideUp(0,function(){angular.element("#extraMediaForm a").removeClass("blackout"),angular.element("#extraMediaForm a").fadeTo(0,1)}),angular.element("#extraMediaForm").removeClass("open"));var n=angular.element("#block-"+t.key).offset().top;angular.element("html, body").animate({scrollTop:n},600)}}),e.resetCursor()},e.saveOrder=function(){t.post("/spot/saveOrder",e.spot).success(function(e){"no"==e.error})},e.sortableOptions={update:function(){e.saveOrder()},containment:".spot-content",handle:".move",scrollSensitivity:5,tolerance:"pointer",opacity:.8},e.removeContent=function(o,n,r){o.key=n,t.post("/spot/spotRemoveContent",o).success(function(t){if("no"==t.error){var o=angular.element(r.currentTarget).parents(".spot-item");o.remove(),e.keys=t.keys,t.netDown&&e.netDown(t.netDown)}})},e.editContent=function(t,n,r){if(t.content_new)e.hideSpotEdit();else{t.key=n;var s=angular.element(r.currentTarget).parents(".spot-item"),i=angular.element("#spot-edit").clone();if(s.find("a.type-link").size()>0){var a=s.find("a.type-link");e.spot.content_new=a.find("span.link").text()}else{var c=s.find("p.item-type__text");e.spot.content_new=c.text()}i.removeClass("hide"),i.find("textarea").focus(1),s.hide().before(o(i)(e))}},e.saveContent=function(n,r){var s=angular.element(r.currentTarget).parents(".spot-item"),i=s.next();t.post("/spot/spotSaveContent",n).success(function(t){"no"==t.error?(s.before(o(t.content)(e)),s.remove(),i.remove()):(s.remove(),i.show()),delete e.spot.content_new})},e.hideSpotEdit=function(){if(!e.spot.content&&!e.spot.content_new)return!1;var n=angular.element("#spot-edit"),r=n.next();t.post("/spot/spotSaveContent",e.spot).success(function(t){"no"==t.error?(n.before(o(t.content)(e)),n.remove(),r.remove()):(n.remove(),r.show()),delete e.spot.content_new})},e.renameSpot=function(o){return o.name?void t.post("/spot/rename",o).success(function(t){"no"==t.error&&(angular.element("#"+o.discodes+" h3").text(o.name),r.messageModal(t.content,e.host_type))}):!1},e.cleanSpot=function(o){s.yesNoDialog(function(n){return"yes"!=n?!1:void t.post("/spot/clean",o).success(function(t){"no"==t.error&&(e.general.views="spot")})},e.text.yes_btn,e.text.no_btn,e.text.clean_spot,"negative")},e.removeSpot=function(o){s.yesNoDialog(function(e){return"yes"!=e?!1:void t.post("/spot/remove",o).success(function(e){"no"==e.error&&angular.element(location).attr("href","/spot/list/")})},e.text.yes_btn,e.text.no_btn,e.text.rm_spot,"negative")},e.ivisibleSpot=function(o){var n=e.text.mk_invisible,r=e.text.mk_invisible_descr;6==o.status&&(n=e.text.mk_visible,r=e.text.mk_visible_descr),s.yesNoDialog(function(n){return"yes"!=n?!1:void t.post("/spot/invisible",o).success(function(t){"no"==t.error&&(e.spot.status=t.status,angular.element("#"+o.discodes).toggleClass("invisible"))})},e.text.yes_btn,e.text.no_btn,n,"negative")},e.viewsSettings=function(n){var r=angular.element("#spot-block");t.post("/spot/settings",n).success(function(t){"no"==t.error&&(r.empty(),r.html(o(t.content)(e)),e.bodyMinHeight(),angular.element(".spot-content_row").show().animate({opacity:1},500))})},e.viewWallet=function(n){var r=angular.element("#spot-block");t.post("/spot/wallet",n).success(function(t){"no"==t.error?(r.empty(),r.html(o(t.content)(e)),e.getListCard(),e.bodyMinHeight(),angular.element(".spot-content_row").show().animate({opacity:1},500),angular.element("#date_history").datepicker({yearRange:"1900:-0",maxDate:0,dateFormat:"dd.mm.yy",onSelect:function(t){e.$apply(function(){e.wallet_history.date=t})},onClose:function(){e.$apply(function(){e.date_history_shown=!1})}})):e.viewSpot(e.spot)})},e.viewCoupons=function(n){var r=angular.element("#spot-block");t.post("/spot/coupons",n).success(function(t){"no"==t.error&&(r.empty(),r.html(o(t.content)(e)),e.bodyMinHeight(),angular.element(".spot-content_row").show().animate({opacity:1},500))})},e.viewTransport=function(n){var r=angular.element("#spot-block");t.post("/spot/transport",n).success(function(t){"no"==t.error&&(r.empty(),r.html(o(t.content)(e)),e.bodyMinHeight(),angular.element(".spot-content_row").show().animate({opacity:1},500))})},e.listCoupons=function(n,r){if(!r.page)return!1;var s=angular.element("#coupons-list"),i={discodes:n.discodes,token:n.token,page:r.page,phrase:r.phrase,offset:r.offset};e.actions.in_progress=!0,t.post("/spot/listCoupons",i).success(function(t){"no"==t.error&&(e.actions.offset+=t.count,e.actions.count_all=t.count_all,s.append(o(t.content)(e)),e.actions.in_progress=!1)}).error(function(){e.actions.in_progress=!1})},e.filterCoupons=function(t,o){e.actions.offset=0,e.actions.count_all=0,e.listCoupons(t,o)},e.getListCard=function(){return"wallet"!=e.general.views?!1:(t.post("/spot/listCard",e.wallet).success(function(t){"no"==t.error&&(e.wallet.cards=t.cards,e.wallet.cards_count=t.cards_count,e.wallet.linking_card=t.linking_card)}),void n(function(){e.getListCard()},5e3))},e.showCustomCard=function(){$("#customCard").addClass("show"),$("body").css("overflow","hidden")},e.hideCustomCard=function(){$("#customCard").removeClass("show"),$("body").css("overflow","")},e.blockedWallet=function(){t.post("/spot/blockedWallet",e.wallet).success(function(t){"no"==t.error&&(e.wallet.status=t.status)})},e.linkingCard=function(e){return e.terms?void angular.element("#linking_card").submit():!1},e.setPaymentCard=function(o,n){if(e.in_request)return!1;var r={token:e.spot.token,card_id:o};e.in_request=!0,t.post("/spot/setPaymentCard",r).success(function(t){"no"==t.error&&(angular.element(".main-card").removeClass("main-card"),angular.element(n.currentTarget).parent().parent().addClass("main-card"),e.wallet.blacklist=1),e.in_request=!1}).error(function(){e.in_request=!1})},e.editCardList=function(){$(".table-card").toggleClass("edit"),e.wallet.card_edit=0===e.wallet.card_edit?1:0},e.removeCard=function(o){var n={token:e.spot.token,card_id:o};t.post("/spot/removeCard",n).success(function(t){"no"==t.error&&(e.wallet.cards_count-=1,delete e.wallet.cards[o])})};var u;e.countReset=function(){e.reset_time="undefined"!=typeof e.reset_time?e.reset_time:30,u=n(function(){0===e.reset_time?$(location).attr("href",window.location.pathname):e.reset_time--,e.countReset()},1e3)},e.fileUploadInit=function(){var e=document.getElementById("dropbox"),t=document.getElementById("add-file");if(e&&t){var o=new XMLHttpRequest;o.upload&&(e.addEventListener("dragover",i,!1),e.addEventListener("dragleave",i,!1),e.addEventListener("drop",a,!1),t.addEventListener("change",a,!1))}},e.uploadComplete=function(t){var n=t.target.responseText;if(n){var r=angular.fromJson(n);if("no"==r.error){angular.element("#progress-content").hide(),angular.element("#add-content").append(o(r.content)(e)),e.keys.push(r.key),angular.element("#add-file").val("");var s=$("#block-"+r.key).offset().top;angular.element("html, body").animate({scrollTop:s},600)}}},e.uploadFailed=function(){angular.element("#error-upload").show().delay(800).slideUp("slow")},e.uploadFile=function(t){var o=new XMLHttpRequest;o.upload&&t.size<=e.maxSize&&(angular.element("#progress-content").show(),o.upload.onprogress=function(t){e.progress=t.lengthComputable?Math.round(100*t.loaded/t.total):"unable to compute"},o.upload.addEventListener("progress",c,!1),o.addEventListener("error",e.uploadFailed,!1),o.addEventListener("load",e.uploadComplete,!1),o.open("POST","/spot/upload",!0),o.setRequestHeader("X-File-Name",unescape(encodeURIComponent(t.name))),o.setRequestHeader("X-Discodes",e.spot.discodes),o.send(t))},e.loadSocContent=function(n){var r={discodes:e.spot.discodes,key:n,token:e.user.token};t.post("/spot/SocNetContent",r).success(function(t){if("no"==t.error){var n=angular.element("#block-"+t.key),r=n.height(),s=n.offset().top;if(n.before(o(t.content)(e)),n.remove(),e.setVideoSize(t.key),s<$("html, body").scrollTop()){var i=$("html, body").scrollTop()+$("#block-"+t.key).height()-r;$("html, body").animate({scrollTop:i},0)}}})},e.netCheck=function(o){var n={token:e.user.token,netName:o};t.post("/spot/netCheck",n).success(function(e){if("no"==e.error){var t=angular.element("#extraMediaForm a[net='"+e.netName+"']");e.binded?t.addClass("binded"):t.removeClass("binded")}})},e.netUp=function(e){var t=angular.element("#extraMediaForm a[net='"+e+"']");t.addClass("binded")},e.netDown=function(e){var t=angular.element("#extraMediaForm a[net='"+e+"']");t.removeClass("binded")};var d,l,p,m;e.bindByPanel=function(s){var i=s,a={spot:e.spot,token:e.user.token,netName:i};if("undefined"!=typeof e.spot.content&&e.spot.content.length){a.link=e.spot.content;for(var c=0;c<e.soc_patterns.length;c++)if(-1!=e.spot.content.indexOf(e.soc_patterns[c].baseUrl)){i=e.soc_patterns[c].name,a.netName=e.soc_patterns[c].name;break}}t.post("/spot/BindByPanel",a).success(function(t){if("no"==t.error&&0===t.profileHint.length)if(t.loggedIn)if("ok"==t.linkCorrect){angular.element("#add-content").append(o(t.content)(e)),e.keys.push(t.key),e.spot.content="",angular.element("textarea").removeClass("put"),e.resetCursor(),e.setVideoSize(t.key);var s=$("#block-"+t.key).offset().top;$("html, body").animate({scrollTop:s},600),e.netUp(t.socnet);var a=e.getPatternInd(t.socnet);a>-1&&(e.soc_patterns[a].BindByPaste=!0)}else r.messageModal(t.linkCorrect,e.host_type);else{var c=$.extend({id:"",popup:{width:450,height:380}},c),u="http://"+window.location.hostname+"/user/BindSocLogin?service="+i,p=u;p+=p.indexOf("?")>=0?"&":"?",-1===p.indexOf("redirect_uri=")&&(p+="redirect_uri="+encodeURIComponent(u));var m=(window.screen.width-c.popup.width)/2,f=(window.screen.height-c.popup.height)/2;if(e.host_mobile||(d=window.open(p+"&js","yii_eauth_popup","width="+c.popup.width+",height="+c.popup.height+",left="+m+",top="+f+",resizable=yes,scrollbars=no,toolbar=no,menubar=no,location=no,directories=no,status=yes")),null===d||"undefined"==typeof d){var g=p+"&discodes="+e.spot.discodes+"&newField=1&synch=true";"undefined"!=typeof e.spot.content&&e.spot.content.length&&(g+="&link="+encodeURIComponent(e.spot.content)),window.location.href=g}else d.focus(),e.bindNet={name:t.socnet,discodes:e.spot.discodes,newField:1},"undefined"!=typeof e.spot.content&&e.spot.content.length&&(e.bindNet.link=e.spot.content),l=n(e.loginTimer,1e3)}})},e.getPatternInd=function(t){for(var o=-1,n=0;n<e.soc_patterns.length;n++)if(e.soc_patterns[n].name==t){o=n;break}return o},e.bindSocial=function(s,i,a){var c=angular.element(a.currentTarget).parents(".spot-item");s.key=i,t.post("/spot/bindSocial",s).success(function(t){if("no"==t.error)if("no"!=t.socnet&&t.socnet.length>0)if(t.loggedIn)if("ok"==t.linkCorrect){c.before(o(t.content)(e)),c.remove();var i=e.getPatternInd(t.socnet);i>-1&&(e.soc_patterns[i].BindByPaste=!0),e.setVideoSize(s.key),e.netUp(t.socnet)}else r.messageModal(t.linkCorrect,e.host_type);else{var u=$.extend({id:"",popup:{width:450,height:380}},u),p="http://"+window.location.hostname+"/user/BindSocLogin?service="+t.socnet,m=p;m+=m.indexOf("?")>=0?"&":"?",-1===m.indexOf("redirect_uri=")&&(m+="redirect_uri="+encodeURIComponent(p));var f=(window.screen.width-u.popup.width)/2,g=(window.screen.height-u.popup.height)/2;d=window.open(m+"&js","yii_eauth_popup","width="+u.popup.width+",height="+u.popup.height+",left="+f+",top="+g+",resizable=yes,scrollbars=no,toolbar=no,menubar=no,location=no,directories=no,status=yes"),null===d||"undefined"==typeof d?window.location.href=m+"&discodes="+s.discodes+"&key="+s.key+"&synch=true":(d.focus(),e.bindNet={name:t.socnet,discodes:s.discodes,key:s.key,spotEdit:angular.element(a.currentTarget).parents(".spot-item")},l=n(e.loginTimer,1e3))}else"ok"!=t.linkCorrect&&r.messageModal(t.linkCorrect,e.host_type)})},e.checkLike=function(r,s){var i,a={token:e.user.token,id:r,discodes:e.spot.discodes};t.post("/user/checkLike",a).success(function(t){if("no"==t.error)if(t.isSocLogged)"undefined"!=typeof t.content&&(e.host_mobile||angular.isUndefined(s)?angular.isUndefined(s)||(i=angular.element(s.currentTarget).parent().parent().parent().parent()):i=angular.element(s.currentTarget).parent().parent("div.spot-item"),i.before(o(t.content)(e)),i.remove());else{var a=$.extend({id:"",popup:{width:450,height:380}},a),c="http://"+window.location.hostname+"/user/BindSocLogin?service="+t.service,u=c;u+=u.indexOf("?")>=0?"&":"?",-1===u.indexOf("redirect_uri=")&&(u+="redirect_uri="+encodeURIComponent(c)+"&"),u+="js";var l=(window.screen.width-a.popup.width)/2,m=(window.screen.height-a.popup.height)/2;if(e.host_mobile||(d=window.open(u,"yii_eauth_popup","width="+a.popup.width+",height="+a.popup.height+",left="+l+",top="+m+",resizable=yes,scrollbars=no,toolbar=no,menubar=no,location=no,directories=no,status=yes")),null===d||"undefined"==typeof d){var f=u+"&discodes="+e.spot.discodes+"&chek_like="+r;window.location.href=f}else d.focus(),e.checkingAction={id:r,sharing_ind:t.ind},angular.isUndefined(s)||(e.actionDiv=angular.element(s.currentTarget).parent().parent("div.spot-item")),p=n(e.likesTimer,1e3)}})},e.likesTimer=function(){if(!d.closed){var r={token:e.user.token,id:e.checkingAction.id,sharing_ind:e.checkingAction.sharing_ind,discodes:e.spot.discodes};t.post("/user/checkLike",r).success(function(t){t.isSocLogged?(d.close(),e.actionDiv.before(o(t.content)(e)),e.actionDiv.remove()):t.sharing_logged?(d.close(),e.checkLike(e.checkingAction.id)):p=n(e.likesTimer,1e3)})}},e.loyaltyTimer=function(){for(var t=angular.element(".connecting"),o=0;o<t.length;o++){var r=angular.element(t[o]).attr("id").substring(7);e.checkLoyaltyConnection(r)}m=n(e.loyaltyTimer,1e3)},e.setLoyaltyTimer=function(){m=n(e.loyaltyTimer,1e3)},e.checkLoyaltyConnection=function(n){var r={token:e.user.token,id:n,discodes:e.spot.discodes},s=angular.element("#coupon-"+n);t.post("/user/checkLoyaltyConnection",r).success(function(t){"undefined"!=typeof t.connected&&t.connected&&(s.before(o(t.content)(e)),s.remove())
})},e.disableAction=function(n,r){var s,i={token:e.user.token,id:r,discodes:e.spot.discodes};t.post("/user/disableLoyalty",i).success(function(t){"no"==t.error&&(s=e.host_mobile?angular.element(n.currentTarget).parent().parent().parent().parent():angular.element(n.currentTarget).parent().parent("div.spot-item"),s.before(o(t.content)(e)),s.remove())})},e.loginTimer=function(){if(!d.closed){var s={name:e.bindNet.name,discodes:e.bindNet.discodes,key:e.bindNet.key};"undefined"!=typeof e.bindNet.newField&&1==e.bindNet.newField&&(s.newField=1),"undefined"!=typeof e.bindNet.link&&e.bindNet.link.length&&(s.link=e.bindNet.link);var i={token:e.user.token,bindNet:s};t.post("/spot/bindedContent",i).success(function(t){if("undefined"!=typeof t.loggedIn&&"undefined"!=typeof t.linkCorrect)if(t.loggedIn)if(d.close(),"ok"==t.linkCorrect){if(t.newField){angular.element("#add-content").append(o(t.content)(e)),e.keys.push(t.key),e.spot.content="",angular.element("textarea").removeClass("put"),e.resetCursor(),e.netUp(t.socnet),e.setVideoSize(t.key);var s=$("#block-"+t.key).offset().top-100;angular.element("html, body").animate({scrollTop:s},600)}else{var i=e.bindNet.spotEdit;i.before(o(t.content)(e)),i.remove(),e.setVideoSize(t.key),e.netUp(t.socnet)}e.bindNet={};var a=e.getPatternInd(t.socnet);a>-1&&(e.soc_patterns[a].BindByPaste=!0)}else r.messageModal(t.linkCorrect,e.host_type);else l=n(e.loginTimer,1e3)})}},e.unBindSocial=function(n,r,s){n.key=r,t.post("/spot/UnBindSocial",n).success(function(t){if("no"==t.error){var n=angular.element(s.currentTarget).parents(".spot-item");n.before(o(t.content)(e)),n.remove(),t.netDown&&e.netDown(t.netDown)}})},e.getSocPatterns=function(){if(e.freeSocial=!0,"undefined"==typeof e.soc_patterns){var o={token:e.user.token};t.post("/spot/SocPatterns",o).success(function(t){e.soc_patterns=t.soc_patterns;for(var o=0;o<e.soc_patterns.length;o++)"undefined"==typeof e.soc_patterns[o].BindByPaste&&(e.soc_patterns[o].BindByPaste=!1)})}},e.setVideoSize=function(e){var t;1==angular.element("#block-"+e+" .video-vimeo").length?(t=angular.element("#block-"+e+" .video-vimeo"),t.css("width","100%"),t.css("height",parseInt(t.css("width"),10)/t.attr("rel")+"px")):1==angular.element("#block-"+e+" .yt_player").length&&(t=angular.element("#block-"+e+" .yt_player"),t.css("width","100%"),t.css("height",parseInt(t.css("width"),10)/t.attr("rel")+"px"))},e.setNewPass=function(o){t.post("/spot/setSpotPass",o).success(function(t){"no"==t.error&&"undefined"!=typeof t.saved?(angular.element("#savePassButton").text(t.saved),"undefined"!=typeof e.spot.pass&&o.pass.length?angular.element("#resetPassButton").show():angular.element("#resetPassButton").hide()):"yes"==t.error&&angular.element("#setPassForm input[name=newPass]").addClass("error")})},e.resetPass=function(t){t.pass="",e.setNewPass(t)},e.savePassButtonText=function(e){angular.element("#savePassButton").text(e),angular.element("#setPassForm input[name=newPass]").removeClass("error")},e.checkStatusSpot=function(){return!0},e.resetCursor=function(){"undefined"!=typeof e.cursorBody&&e.cursorBody.length?(angular.element("body").css("cursor",e.cursorBody),delete e.cursorBody):angular.element("body").css("cursor","default"),"undefined"!=typeof e.cursorTextarea&&e.cursorTextarea.length?(angular.element("#dropbox textarea").css("cursor",e.cursorTextarea),delete e.cursorTextarea):angular.element("#dropbox textarea").css("cursor","text")},e.$watch("actions.page",function(){e.actions.offset=0,e.actions.count_all=0;var t=angular.element("#coupons-list");t.empty(),e.listCoupons(e.spot,e.actions)}),e.couponsScroll=function(){e.actions.in_progress=!1,angular.element(window).bind("scroll",e.loadMoreCoupons)},e.loadMoreCoupons=function(){angular.element(window).scrollTop()+angular.element(window).height()>=angular.element(document).height()-200&&!e.actions.in_progress&&e.actions.offset<e.actions.count_all&&e.listCoupons(e.spot,e.actions)},e.initTransportType=function(t,o,n){e.transport_types[e.transport_types.length]={id:t,name:o,img:n}},e.setType=function(t){e.custom_card.back=t.id,t.img&&$("#card-back").css("background-image","url(/uploads/transport/"+t.img+")")},e.sendImg=function(t){var o=$(t).parents("form");if(""===$(t).val())return!1;var n=o.children("input[name=discodes_id]"),s=o.children("input[name=token]"),i=o.children("input[name=img_type]"),a=o.find("span.upload-holder"),c=o.find("i.upload-holder"),u=o.find("img.upload-holder"),d=r.getSpot();n.length&&n.val(d.discodes),s.length&&s.val(d.token),o.ajaxSubmit({type:"POST",success:function(t){var o=angular.fromJson(t);(o.error="no")?(a.length&&a.addClass("hide"),c.length&&c.addClass("hide"),u.removeClass("hide"),u.attr("src",o.path+"?ver="+(new Date).getTime()),e.$apply(function(){"transport_photo"==i.val()?e.custom_card.photo=o.path:"transport_logo"==i.val()&&(e.custom_card.logo=o.path),e.error.custom_card=!1})):e.error.custom_card=!0}})},e.showImageCropper=!1,e.showLogoCropper=!1,e.setSpot=function(){r.setSpot(e.spot)},e.orderTransportCard=function(o,n,s){if(!n)return e.error.custom_card=!0,!1;var i=r.getSpot();o.token=i.token,o.discodes=i.discodes,t.post("/spot/orderTransportCard",o).success(function(t){"no"==t.error?(e.hideCustomCard(),r.messageModal(s,e.host_type)):e.error.custom_card=!0})},e.orderCustomCard=function(o,s,i){return s?e.isDoubleCard(o)?(e.error.custom_card=!0,r.messageModal("Вы уже заказали эту карту",e.host_type),n(function(){e.error.custom_card=!1},1e3),!1):(e.saveCardParams(o),void t.post("/spot/orderCustomCard",o).success(function(t){"no"==t.error?(r.messageModal(i,e.host_type),o.number=t.number):e.error.custom_card=!0})):(e.error.custom_card=!0,!1)},e.saveCardParams=function(t){for(property in t)e.prev_custom_card[property]=t[property]},e.isDoubleCard=function(t){for(property in t)if("number"!=property&&e.prev_custom_card[property]!=t[property])return!1;return!0},e.$watch("custom_card.shipping_name + custom_card.phone + custom_card.address + custom_card.city + custom_card.zip + custom_card.email",function(){e.error.custom_card=!1}),e.$watch("wallet_history.date",function(){if(!e.wallet_history.date.length)return!1;var n={discodes:e.spot.discodes,token:e.spot.token,date:e.wallet_history.date};block_history=angular.element("#history-wrapper"),block_history.empty(),e.wallet_history.empty_date=!1,t.post("/spot/listHistory",n).success(function(t){"no"==t.error&&(block_history.append(o(t.content)(e)),t.empty_for_date&&(e.wallet_history.empty_date=!0))})}),e.customCardInit=function(t){e.custom_card=angular.fromJson(t)},e.showDatepicker=function(t){return e.date_history_shown?!1:(e.date_history_shown=!0,void angular.element(t).datepicker("show"))},e.addPhone=function(n,r){if(!r)return!1;var s={discodes:e.spot.discodes,token:e.spot.token,phone:n};t.post("/spot/addPhone",s).success(function(t){"no"==t.error&&(e.new_phone="",angular.element("#phones-list").append(o(t.content)(e)))})},e.removePhone=function(o,n){var r={discodes:e.spot.discodes,token:e.spot.token,phone:o};t.post("/spot/removePhone",r).success(function(e){if("no"==e.error){var t=angular.element(n.currentTarget).parents(".phone-row");t.remove()}})},e.activateSchoolExtended=function(n){var r={discodes:e.spot.discodes,token:e.spot.token,address:n};t.post("/spot/activateSchoollExtended",r).success(function(t){if("no"==t.error){e.home_address="";var n=angular.element("#phone_services");n.empty(),n.append(o(t.content)(e))}})},e.removeSchoolExtended=function(){var n={discodes:e.spot.discodes,token:e.spot.token};t.post("/spot/removeSchoollExtended",n).success(function(t){if("no"==t.error){e.home_address="";var n=angular.element("#phone_services");n.empty(),n.append(o(t.content)(e))}})}}]),angular.module("mobispot").controller("ProductController",["$scope","$http","$compile","$timeout","contentService",function(e,t){e.host_type="desktop",e.transport_card={},e.simple_card={},e.transport_types=[],e.StoreInit=function(){var n={token:e.user.token};t.post("/store/product/getPriceList",n).success(function(t){e.products=t.products,e.settings=t.settings;for(var n=0;n<e.products.length;n++)if(e.products[n].jsID=n,e.products[n].selectedSize=e.products[n].size[0],e.products[n].selectedColor=e.products[n].color[0],e.products[n].selectedSurface=e.products[n].surface[0],e.products[n].quantity=1,e.products[n].listposition={left:"0px"},e.products[n].addText=e.settings.addToCart,"undefined"!=typeof e.products[n].selectedColor&&"undefined"!=typeof e.products[n].photo&&e.products[n].photo.length>0)for(var r="_"+e.products[n].selectedColor,s=0;s<e.products[n].photo.length;s++){var i=e.products[n].photo[s].substring(0,e.products[n].photo[s].lastIndexOf("."));if(i.substr(i.length-r.length)==r){e.products[n].listposition={left:o*s*-1+"px"};break}}e.inRequest=!1}),angular.element("body").removeClass("overflow-h"),angular.element(".m-cover-preload").fadeOut(600)};var o=242;e.scrollTo=function(t,n,r){e.products[r].listposition={left:o*n*-1+"px"}},e.addToCart=function(o){if(e.products[o].quantity<1)return!1;if(e.inRequest)return!1;if("troika"==e.products[o].type)return e.showConstructorTroika(e.products[o],o),!1;if("simple"==e.products[o].type)return e.showConstructorSimple(e.products[o],o),!1;e.inRequest=!0;var n={token:e.user.token,id:e.products[o].id,quantity:parseInt(e.products[o].quantity),selectedColor:e.products[o].selectedColor,selectedSurface:e.products[o].selectedSurface,selectedSize:e.products[o].selectedSize};t.post("/store/product/addToCart",n).success(function(t){if("no"==t.error){e.products[o].addText=e.settings.added,e.items.count+=parseInt(e.products[o].quantity);var n=angular.element("a.icon-bag-link span");n.text(e.items.count)}e.inRequest=!1}).error(function(){e.inRequest=!1})},e.addTransportCard=function(o){o.token=e.user.token,t.post("/store/product/addCustomCard",o).success(function(t){if("no"==t.error){angular.isUndefined(e.transportId)||(e.products[e.transportId].addText=e.settings.added),e.items.count+=1;var o=angular.element("a.icon-bag-link span");o.text(e.items.count)}}),e.hideConstructorTroika()},e.addSimpleCard=function(o){t.post("/store/product/addCustomCard",o).success(function(t){if("no"==t.error){angular.isUndefined(e.simpleId)||(e.products[e.simpleId].addText=e.settings.added),e.items.count+=1;var o=angular.element("a.icon-bag-link span");o.text(e.items.count)}}),e.hideConstructorSimple()},e.showConstructorTroika=function(t,o){e.transport_card.id=t.id,e.transportId=o,$("#constructor-troika").addClass("show"),$("body").css("overflow","hidden")},e.hideConstructorTroika=function(){$("#constructor-troika").removeClass("show"),$("body").css("overflow","")},e.showConstructorSimple=function(t,o){e.simple_card.id=t.id,e.simpleId=o,$("#constructor-simple").addClass("show"),$("body").css("overflow","hidden")},e.hideConstructorSimple=function(){$("#constructor-simple").removeClass("show"),$("body").css("overflow","")},e.initTransportType=function(t,o,n){e.transport_types[e.transport_types.length]={id:t,name:o,img:n}},e.setType=function(t){e.transport_card.back=t.id,t.img&&$("#card-back").css("background-image","url(/uploads/transport/"+t.img+")")},e.sizeClass=function(e,t){return e===t?"active":""},e.colorClass=function(e,t){return e===t?"active":""},e.surfaceClass=function(e,t){return e===t?"active":""},e.setSize=function(t,o){e.products[t].selectedSize=o,e.products[t].addText=e.settings.addToCart},e.setColor=function(t,n){if(e.products[t].selectedColor=n,e.products[t].addText=e.settings.addToCart,"undefined"!=typeof e.products[t].photo&&e.products[t].photo.length>0)for(var r="_"+n,s=0;s<e.products[t].photo.length;s++){var i=e.products[t].photo[s].substring(0,e.products[t].photo[s].lastIndexOf("."));if(i.substr(i.length-r.length)==r){e.products[t].listposition={left:o*s*-1+"px"};break}}},e.setSurface=function(t,o){e.products[t].selectedSurface=o,e.products[t].addText=e.settings.addToCart},e.resetAddedText=function(t){e.products[t].addText=e.settings.addToCart,e.products[t].quantity<0&&(e.products[t].quantity=0)},e.thumbClass=function(e){return e>3?"thumbswrapper xscrolled":"thumbswrapper"}}]),angular.module("mobispot").controller("CartController",["$scope","$http","$compile","$timeout","contentService",function(e,t,o,n,r){e.promoError=!1,e.customerError=!1,e.CartInit=function(){e.summ=0;var o={token:e.user.token};t.post("/store/product/GetCart",o).success(function(t){e.products=t.products,e.discount=t.discount,e.products.length<=0&&(window.location="/store");for(var o=0;o<e.products.length;o++)if(e.products[o].jsID=o,e.products[o].quantity=parseInt(e.products[o].quantity),e.summ+=parseFloat(e.products[o].selectedSize.price)*e.products[o].quantity,e.products[o].listposition={left:"0px"},"undefined"!=typeof e.products[o].selectedColor&&"undefined"!=typeof e.products[o].photo&&e.products[o].photo.length>0)for(var n="_"+e.products[o].selectedColor,r=0;r<e.products[o].photo.length;r++){var i=e.products[o].photo[r].substring(0,e.products[o].photo[r].lastIndexOf("."));if(i.substr(i.length-n.length)==n){e.products[o].listposition={left:s*r*-1+"px"};break}}if(e.discount.products&&e.discount.products.length>0){e.discount.summ=0;for(var o=0;o<e.products.length;o++)for(var r=0;r<e.discount.products.length;r++)if(e.products[o].id==e.discount.products[r].id_product){e.discount.summ+=e.discount.products[r].discount*parseInt(e.products[o].quantity);break}e.discount.summ>0&&(e.summ-=e.discount.summ)}e.checkingOut=!1,e.inRequest=!1}),angular.element("body").removeClass("overflow-h"),angular.element(".m-cover-preload").fadeOut(600)};var s=242;e.scrollTo=function(t,o,n){e.products[n].listposition={left:s*o*-1+"px"}},e.emptyClass=function(){return e.products?e.products.length>0?"hide":"":void 0},e.sizeClass=function(e,t){return e===t?"active":""},e.colorClass=function(e,t){return e===t?"active":""},e.surfaceClass=function(e,t){return e===t?"active":""},e.chekingOutClass=function(){return e.checkingOut?"":"hide"},e.setSize=function(t,o){e.summ-=parseFloat(e.products[t].selectedSize.price)*e.products[t].quantity,e.products[t].selectedSize=o,e.summ+=parseFloat(e.products[t].selectedSize.price)*e.products[t].quantity},e.setColor=function(o,n){var r={id:e.products[o].id,quantity:e.products[o].quantity,selectedColor:e.products[o].selectedColor};if("undefined"!=typeof e.products[o].selectedSize&&(r.selectedSize=e.products[o].selectedSize),"undefined"!=typeof e.products[o].selectedSurface&&(r.selectedSurface=e.products[o].selectedSurface),e.products[o].selectedColor=n,"undefined"!=typeof e.products[o].photo&&e.products[o].photo.length>0)for(var i="_"+n,a=0;a<e.products[o].photo.length;a++){var c=e.products[o].photo[a].substring(0,e.products[o].photo[a].lastIndexOf("."));if(c.substr(c.length-i.length)==i){e.products[o].listposition={left:s*a*-1+"px"};break}}var u={token:e.user.token,oldProduct:r,newProduct:e.products[o]};t.post("/store/product/SaveProduct",u).success(function(e){"no"!=e.error})},e.setSurface=function(t,o){e.products[t].selectedSurface=o},e.setDelivery=function(t){e.selectedDelivery=e.deliveries[t]},e.setPayment=function(t){e.selectedPayment=e.payments[t]},e.changeQuantity=function(o){if(parseInt(e.products[o].quantity)<=0)e.deleteItem(o);else{e.summ=0;for(var n=0;n<e.products.length;n++)e.summ+=parseFloat(e.products[n].selectedSize.price)*e.products[n].quantity;if("undefined"!=typeof e.discount.products&&e.discount.products.length>0){e.discount.summ=0;for(var n=0;n<e.products.length;n++)for(var r=0;r<e.discount.products.length;r++)if(e.products[n].id==e.discount.products[r].id_product){e.discount.summ+=e.discount.products[r].discount*parseInt(e.products[n].quantity);break}e.discount.summ>0&&(e.summ-=e.discount.summ)}var s={token:e.user.token,oldProduct:e.products[o],newProduct:e.products[o]};t.post("/store/product/SaveProduct",s).success(function(e){"no"!=e.error})}},e.checkOut=function(){if(0===e.summ)return!1;if(!e.checkingOut){var o={token:e.user.token};t.post("/store/product/getCustomer",o).success(function(t){e.deliveries=t.delivery,e.payments=t.payment,e.customer=t.customer;for(var o=0;o<e.deliveries.length;o++)e.deliveries[o].jsID=o;for(var o=0;o<e.payments.length;o++)e.payments[o].jsID=o;e.selectedDelivery=e.deliveries[0],e.selectedPayment=e.payments[0]}),e.checkingOut=!0}angular.element("#proceedNextForm").removeClass("hide-content-box"),$("html, body").animate({scrollTop:$("#proceedNextForm").offset().top},600)},e.deleteItem=function(o){if(!e.inRequest){e.inRequest=!0;var n={token:e.user.token,id:e.products[o].id,quantity:e.products[o].quantity,selectedColor:e.products[o].selectedColor,selectedSurface:e.products[o].selectedSurface,selectedSize:e.products[o].selectedSize};t.post("/store/product/deleteFromCart",n).success(function(t){if("no"==t.error){e.products.splice(o,1),e.summ=0;for(var n=0;n<e.products.length;n++)e.products[n].jsID=n,e.summ+=parseFloat(e.products[n].selectedSize.price)*e.products[n].quantity;if(e.discount.products&&e.discount.products.length>0){e.discount.summ=0;for(var n=0;n<e.products.length;n++)for(var r=0;r<e.discount.products.length;r++)if(e.products[n].id==e.discount.products[r].id_product){e.discount.summ+=e.discount.products[r].discount*parseInt(e.products[n].quantity);break}e.discount.summ>0&&(e.summ-=e.discount.summ)}e.products.length<=0&&(window.location="/store")}}),e.inRequest=!1}},e.confirmPromo=function(){if(!e.inRequest){e.inRequest=!0;var o={token:e.user.token,promoCode:e.discount.promoCode};t.post("/store/product/ConfirmPromo",o).success(function(t){if("no"==t.error){e.promoError=!1;var o=e.discount.summ;if(e.discount=t.discount,"undefined"!=typeof e.discount.products&&e.discount.products.length>0){e.discount.summ=0;for(var n=0;n<e.products.length;n++)for(var s=0;s<e.discount.products.length;s++)if(e.products[n].id==e.discount.products[s].id_product){e.discount.summ+=e.discount.products[s].discount*parseInt(e.products[n].quantity);break}e.discount.summ>0?(o>0&&(e.summ+=parseFloat(o)),e.summ-=e.discount.summ):o>0&&(e.summ+=parseFloat(o))}}else e.promoError=!0,e.discount.summ>0&&(e.summ+=parseFloat(e.discount.summ),e.discount.summ=0),e.result.message=t.error,r.desktopModal("message")}).error(function(){e.promoError=!0,e.discount.summ>0&&(e.summ+=parseFloat(e.discount.summ),e.discount.summ=0)})}e.inRequest=!1},e.$watch("discount.promoCode",function(){e.promoError=!1}),e.saveCustomer=function(o){if(!o)return e.customerError=!0,e.result.message=e.customerHint,r.desktopModal("message"),!1;if(0===e.summ)return!1;if(!e.inRequest){e.inRequest=!0;var n={token:e.user.token,customer:e.customer};t.post("/store/product/saveCustomer",n).success(function(t){"no"==t.error?(angular.element("#proceedFinishForm").removeClass("hide-content-box"),$("html, body").animate({scrollTop:$("#proceedFinishForm").offset().top},600)):(e.customerError=!0,e.result.message=t.error,r.desktopModal("message"))}),e.inRequest=!1}},e.$watch("customer.first_name + customer.last_name + customer.email + customer.target_first_name + customer.target_last_name + customer.phone + customer.address + customer.city + customer.zip + customer.country",function(){e.customerError=!1}),e.buy=function(){if(0===e.summ)return!1;var n={token:e.user.token,customer:e.customer,products:e.products,delivery:e.selectedDelivery,payment:e.selectedPayment,discount:e.discount};t.post("/store/product/buy",n).success(function(t){"no"==t.error?"email"==t.payment?r.messageModal(t.message,e.host_type):(angular.element("#proceedFinishForm").after(o(t.content)(e)),angular.element("#form-ym-pay").submit()):r.messageModal(t.error,e.host_type)})},e.thumbClass=function(e){return e>3?"thumbswrapper xscrolled":"thumbswrapper"},e.valClass=function(e){return e?"":"error"}}]),angular.module("mobispot").controller("UserController",["$scope","$http","$compile","$cookies","contentService",function(e,t,o,n,r){e.error={},e.result={},e.modal="none",e.host_type="mobile",e.setEmpty=function(){e.user.password="",e.user.terms=0,e.error={},e.result={}},e.hideModal=function(){e.modal="none"},angular.element("#birthday").datepicker({yearRange:"1900:-0",dateFormat:"dd.mm.yy",onSelect:function(t){e.$apply(function(){e.user.birthday=t})}}),e.$watch("modal",function(){e.setEmpty(e.modal),r.desktopModal(e.modal)}),e.setProfile=function(o){t.post("/user/editProfile",o).success(function(t){"no"==t.error&&(e.result.message=t.content,r.desktopModal("message"))})},e.getResolution=function(){var t=n.resolution;if(!t){for(var o=Math.max(screen.width,screen.height),r=[1920,1400,1280],s=0;s<r.length;s++)if(o>=r[s]){t=r[s];break}n.resolution=""+t,e.resolution=t}},e.login=function(o,n){return n?void t.post("/service/login",o).success(function(t){"yes"==t.error?(e.error.email=!0,e.error.content=t.content):"no"==t.error?angular.isUndefined(t.access_url)||!t.access_url.length?angular.element(location).attr("href","/spot/list/"):angular.element(location).attr("href",t.access_url):angular.element(location).attr("href","/")}):!1},e.$watch("user.email + user.password + user.code",function(){e.error.email=!1,e.error.code=!1,e.error.password=!1,e.error.content=""}),e.activation=function(o,n){return n?0===o.terms?!1:void t.post("/service/registration",o).success(function(t){"no"==t.error?(e.user.email="",e.user.password="",e.user.activ_code="",e.user.terms=0,"mobile"===e.host_type?r.mobileModal(t.content,"none"):(e.result.message=t.content,r.desktopModal("message"))):("email"===t.error?e.error.email=!0:e.error.code=!0,e.error.content=t.content,"mobile"===e.host_type&&r.mobileModal(t.content,"error"))}):!1},e.recovery=function(o,n){return n?void t.post("/service/recovery",o).success(function(t){"yes"==t.error?(e.error.email=!0,e.error.content=t.content,"mobile"===e.host_type&&r.mobileModal(t.content,"error")):"no"==t.error&&(e.user.email="",e.result.message=t.content,"mobile"===e.host_type?r.mobileModal(t.content,"none"):r.desktopModal("message"))}):!1},e.change=function(e,o){return o?void t.post(window.location.pathname,e).success(function(e){"no"==e.error&&angular.element(location).attr("href","/spot/list/")}):!1},e.messageModal=function(t){return angular.isUndefined(t)||!t.length?!1:(e.result.message=t,void("mobile"===e.host_type?r.mobileModal(t,"none"):r.desktopModal("message")))},e.loadFront=function(){var e=1920;screen.width<=1400&&(e=1400),screen.width<=1280&&(e=1280);var t=angular.element(".splash .first-screen");t.css("background-image","url(../themes/mobispot/img/info/front_"+e+".jpg)")}}]);
//# sourceMappingURL=data:application/json;base64,